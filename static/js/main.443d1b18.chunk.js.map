{"version":3,"sources":["component/Navbar.js","component/TextForm.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","type","id","placeholder","style","color","borderColor","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","length","split","Alert","alert","msg","App","setmode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.443d1b18.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n       \r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">TextUtils</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/\">AboutUs</a> \r\n                        </li> */}\r\n\r\n\r\n                    </ul>\r\n                    <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success\" style={{ color: props.mode === 'light' ? 'black' : '#eceeef', borderColor: props.mode === 'dark' ? '#0d1cd3' : 'black' }} type=\"submit\">Search</button>\r\n                    </form>\r\n                    <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                        <input className=\"form-check-input mx-1 \" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleclick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase\", \"success\");\r\n\r\n    }\r\n\r\n\r\n\r\n    const handleclickempty = () => {\r\n        let newText = (\"\");\r\n        setText(newText)\r\n        props.showAlert(\"The textarea is empty now!\", \"success\");\r\n\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value)\r\n\r\n    }\r\n    const [text, setText] = useState('')\r\n    return (\r\n        <>\r\n            <div className='container' style={{ color: props.mode === 'light' ? 'black' : 'white' }}>\r\n                <h1> {props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{ backgroundColor: props.mode === 'dark' ? 'grey' : 'white', color: props.mode === 'light' ? 'black' : 'white' }} id=\"MyBox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleclick}>Convert to UpperCase</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleclickempty}>New Text Area</button>\r\n            </div>\r\n            <div className='container' style={{ color: props.mode === 'light' ? 'black' : 'white' }}>\r\n                <h1>Text Summary</h1>\r\n                <p>{text.length} characters and {text.split(\" \").length} words</p>\r\n                <h2>Preview</h2>\r\n                <p>{text}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n\r\n            props.alert &&  <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{props.alert.type}</strong> : {props.alert.msg}\r\n               \r\n            </div>\r\n     \r\n \r\n    )\r\n}\r\n\r\nexport default Alert\r\n\r\n","import './App.css';\nimport Navbar from './component/Navbar';\nimport TextForm from './component/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './component/Alert';\n// import About from './component/About';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   Link\n// } from 'react-router-dom';\n\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = 'rgb(0 32 52) ';\n      showAlert(\"DarkMode has been enabled\", \"success\");\n    }\n    else {\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"LightMode has been enabled\", \"success\");\n    }\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n\n      <Navbar mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\" >\n        <TextForm showAlert={showAlert} heading=\"Enter Your Text\" mode={mode} />\n        {/* <Routes>\n            <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter Your Text\" mode={mode} />}>\n            </Route>\n            <Route exact path=\"About\" element={<About />}>\n            </Route>\n          </Routes> */}\n      </div>\n      {/* </Router> */}\n      {/* <About /> */}\n\n\n    </>\n  );\n\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n   <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}